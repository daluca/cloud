---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: crowdsec
  namespace: crowdsec
spec:
  releaseName: crowdsec
  chart:
    spec:
      chart: crowdsec
      version: ">=0.14.0 <0.15.0"
      sourceRef:
        kind: HelmRepository
        name: crowdsec
        namespace: flux-system
  interval: 1h
  maxHistory: 3
  install:
    remediation:
      retries: 1
      remediateLastFailure: true
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 1
      remediateLastFailure: true
  uninstall:
    keepHistory: false
  test:
    # TODO: remove when appsec testing is conditional
    enable: false
    ignoreFailures: false
  values:
    container_runtime: containerd
    config:
      postoverflows:
        s01-whitelist:
          production-whitelist.yaml: |-
            name: daluca/production-whitelist
            description: "Whitelist production environment"
            whitelist:
              reason: "production environment trusted CIDR range"
              cidr:
                - ${PRODUCTION_IP_ALLOW_LIST}
      config.yaml.local: |-
        db_config:
          type: $${DATABASE_TYPE}
          user: $${POSTGRESQL_USERNAME}
          password: $${POSTGRESQL_PASSWORD}
          db_name: $${POSTGRESQL_DATABASE}
          host: postgresql-cluster.database
          port: 5432
          sslmode: disable
          max_open_conns: 20
    lapi:
      replicas: 2
      env:
        - name: DISABLE_AGENT
          value: "true"
        - name: GID
          value: ""
        - name: DATABASE_TYPE
          value: pgx
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database
              name: database-credentials
        - name: POSTGRESQL_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: database-credentials
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: database-credentials
        - name: BOUNCER_KEY_INGRESS_NGINX
          valueFrom:
            secretKeyRef:
              key: api-key
              name: crowdsec-lapi-credentials
      dashboard:
        enabled: false
      persistentVolume:
        data:
          enabled: true
          accessModes: [ReadWriteMany]
          storageClassName: rook-cephfs
          size: 1Gi
        config:
          enabled: true
          accessModes: [ReadWriteMany]
          storageClassName: rook-cephfs
          size: 100Mi
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    agent:
      acquisition:
        - namespace: ingress-nginx
          podName: ingress-nginx-controller-*
          program: nginx
      env:
        - name: PARSERS
          value: >
            crowdsecurity/cri-logs
        - name: DISABLE_PARSERS
          value: >
            crowdsecurity/docker-logs
        - name: COLLECTIONS
          value: >
            crowdsecurity/linux
            crowdsecurity/nginx
            crowdsecurity/whitelist-good-actors
      tolerations:
        - key: workloadKind
          operator: Equal
          value: monitoring
          effect: NoSchedule
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
