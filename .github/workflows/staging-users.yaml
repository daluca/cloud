---
name: Staging Users

on:
  pull_request:
    branches: [main]
    paths:
      - deploy/terraform/users/staging/**.tf
      - deploy/terraform/users/staging/**.tfvars
      - .github/workflows/staging-users.yaml

  workflow_dispatch:
    inputs:
      state:
        description: apply or destroy staging users
        required: true
        default: apply
        type: choice
        options:
          - apply
          - destroy

permissions:
  pull-requests: write
  contents: read

env:
  GITHUB_TOKEN: ${{ secrets.REPOSITORY_WRITE_TOKEN }}
  AWS_SSE_CUSTOMER_KEY: ${{ secrets.TERRAFORM_STATE_SSE_CUSTOMER_KEY }}
  KEYCLOAK_URL: ${{ secrets.KEYCLOAK_STAGING_URL }}
  KEYCLOAK_REALM: staging
  KEYCLOAK_CLIENT_ID: terraform-management
  KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_STAGING_TERRAFORM_CLIENT_SECRET }}
  TF_VAR_users: ${{ secrets.KEYCLOAK_STAGING_USERS }}

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      tf_actions_working_dir: deploy/terraform/users/staging

    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ">=1.0.0 <1.6.0"

      - name: terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: terraform init
        id: init
        run: >-
          terraform init
          -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}"
          -backend-config="access_key=${{ secrets.WASABI_TERRAFORM_ACCESS_KEY_ID }}"
          -backend-config="secret_key=${{ secrets.WASABI_TERRAFORM_SECRET_ACCESS_KEY }}"

      - name: terraform validate
        id: validate
        run: terraform validate -no-color

      - name: terraform plan
        if: github.event_name == 'pull_request'
        id: plan
        run: terraform plan -no-color

      - name: terraform ${{ inputs.state }}
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
        run: terraform ${{ inputs.state }} -auto-approve
