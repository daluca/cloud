---
name: Cloudflare

on:
  push:
    branches: [main]
    paths:
      - deploy/terraform/accounts/cloudflare/**.tf
      - deploy/terraform/accounts/cloudflare/**.tfvars
      - .github/workflows/cloudflare.yaml

  pull_request:
    paths:
      - deploy/terraform/accounts/cloudflare/**.tf
      - deploy/terraform/accounts/cloudflare/**.tfvars
      - .github/workflows/cloudflare.yaml

permissions:
  pull-requests: write
  contents: read

env:
  CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
  CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
  AWS_SSE_CUSTOMER_KEY: ${{ secrets.TERRAFORM_STATE_SSE_CUSTOMER_KEY }}
  TF_VAR_cloudflare_user_id: ${{ secrets.CLOUDFLARE_USER_ID }}
  TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  TF_VAR_primary_domain: ${{ secrets.PRIMARY_DOMAIN }}
  TF_VAR_secondary_domain: ${{ secrets.SECONDARY_DOMAIN }}
  TF_VAR_tertiary_domain: ${{ secrets.TERTIARY_DOMAIN }}
  TF_VAR_staging_domain: ${{ secrets.STAGING_DOMAIN }}

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      tf_actions_working_dir: deploy/terraform/accounts/cloudflare

    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ">=1.0.0 <1.6.0"

      - name: terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: terraform init
        id: init
        run: >-
          terraform init
          -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}"
          -backend-config="access_key=${{ secrets.WASABI_TERRAFORM_ACCESS_KEY_ID }}"
          -backend-config="secret_key=${{ secrets.WASABI_TERRAFORM_SECRET_ACCESS_KEY }}"

      - name: terraform validate
        id: validate
        run: terraform validate -no-color

      - name: terraform plan
        if: github.event_name == 'pull_request'
        id: plan
        run: terraform plan -no-color

      - name: terraform apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
